name: Deploy To EC2 (main)

on:
  push:
    branches:
      - deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: application-secret.yml 파일 만들기
        run: echo "${{ secrets.APPLICATION_SECRET_YML }}" > ./src/main/resources/application-secret.yml

      - name: Gradle Wrapper에 실행 권한 부여
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build -x test

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: ~/WEB3_4_Poten_BE/new


      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: APPLICATION_PROPERTIES_BASE64
          script_stop: true
          script: |
            rm -rf ~/WEB3_4_Poten_BE/current
            mkdir ~/WEB3_4_Poten_BE/current
            mv ~/WEB3_4_Poten_BE/new/project.jar ~/WEB3_4_Poten_BE/current/project.jar
            cd ~/WEB3_4_Poten_BE/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -Dspring.profiles.active=prod -jar project.jar > ./output.log 2>&1 & 
            rm -rf ~/WEB3_4_Poten_BE/new
          
